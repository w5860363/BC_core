diff --git a/sql/stylist/world_stylist.sql b/sql/stylist/world_stylist.sql
new file mode 100644
index 0000000..f797425
--- /dev/null
+++ b/sql/stylist/world_stylist.sql
@@ -0,0 +1,4 @@
+-- BlizzLikeCore stylist
+DELETE FROM `creature_template` WHERE `entry` = 91013;
+INSERT INTO `creature_template` (`entry`, `heroic_entry`, `modelid_A`, `modelid_A2`, `modelid_H`, `modelid_H2`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `minhealth`, `maxhealth`, `minmana`, `maxmana`, `armor`, `faction_A`, `faction_H`, `npcflag`, `speed`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `baseattacktime`, `rangeattacktime`, `unit_flags`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `class`, `race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `PetSpellDataId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `RacialLeader`, `RegenHealth`, `equipment_id`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`) VALUES
+(91013, 0, 10216, 0, 10216, 0, 'Paul', 'Stylist', NULL, 0, 70, 70, 5000, 5000, 0, 0, 2865, 35, 35, 1, 1, 1, 1, 60, 165, 0, 97, 1500, 1500, 0, 0, 0, 0, 0, 0, 0, 50, 100, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 1, 1, 1, 1, 0, 0, 0, 'stylist');
diff --git a/src/game/ScriptLoader.cpp b/src/game/ScriptLoader.cpp
index 3ac91aa..1daf550 100644
--- a/src/game/ScriptLoader.cpp
+++ b/src/game/ScriptLoader.cpp
@@ -12,6 +12,9 @@
 //void AddSC_custom_gossip_codebox();
 //void AddSC_test();
 
+//custom
+void AddSC_stylist();
+
 //world
 void AddSC_areatrigger_scripts();
 void AddSC_boss_emeriss();
@@ -383,6 +386,10 @@ void AddScripts()
 //    AddSC_custom_example();
 //    AddSC_custom_gossip_codebox();
 //    AddSC_test();
+
+//  custom
+    AddSC_stylist();
+
     AddSC_areatrigger_scripts();
     AddSC_boss_emeriss();
     AddSC_boss_taerar();
diff --git a/src/scripts/Custom/stylist.cpp b/src/scripts/Custom/stylist.cpp
new file mode 100644
index 0000000..7920f26
--- /dev/null
+++ b/src/scripts/Custom/stylist.cpp
@@ -0,0 +1,282 @@
+/*
+ * This file is part of the BlizzLikeCore Project.
+ * See CREDITS.md and LICENSE.md files for Copyright information.
+ */
+ 
+#include "ScriptPCH.h"
+#include "stylist.h"
+
+bool GossipHello_stylist(Player* player, Creature* _creature)
+{
+    int32 text = 0;
+    uint8 standState = player->getStandState();
+    bool sitting = true;
+
+    if (player->IsStandState() || standState == UNIT_STAND_STATE_SIT || standState == UNIT_STAND_STATE_SLEEP || standState == UNIT_STAND_STATE_KNEEL)
+        sitting = false;
+
+    // Select a gossip text
+    if(!sitting)
+        //text = player->GetTeam() == ALLIANCE ? 50011 : 50000;
+        {
+                _creature->Whisper("Please sit down on a chair!", player->GetGUID());
+                return true;
+        }
+    else switch (player->getRace())
+    {
+        case RACE_HUMAN:
+            text = player->getGender() == GENDER_FEMALE ? 50013 : 50012;
+            break;
+        case RACE_ORC:
+            text = player->getGender() == GENDER_FEMALE ? 50002 : 50001;
+            break;
+        case RACE_DWARF:
+            text = player->getGender() == GENDER_FEMALE ? 50015 : 50014;
+            break;
+        case RACE_NIGHTELF:
+            text = player->getGender() == GENDER_FEMALE ? 50019 : 50018;
+            break;
+        case RACE_UNDEAD_PLAYER:
+            text = player->getGender() == GENDER_FEMALE ? 50008 : 50007;
+            break;
+        case RACE_TAUREN:
+            text = player->getGender() == GENDER_FEMALE ? 50006 : 50005;
+            break;
+        case RACE_GNOME:
+            text = player->getGender() == GENDER_FEMALE ? 50017 : 50016;
+            break;        
+        case RACE_DRAENEI:
+            text = player->getGender() == GENDER_FEMALE ? 50021 : 50020;
+            break;
+        case RACE_TROLL:
+            text = player->getGender() == GENDER_FEMALE ? 50004 : 50003;
+            break;
+        case RACE_BLOODELF:
+            text = player->getGender() == GENDER_FEMALE ? 50010 : 50009;
+            break;
+
+            break;
+    }
+    // store values to restore if player choose to cancel
+    hairstyle = player->GetByteValue(PLAYER_BYTES, 2); 
+    haircolor = player->GetByteValue(PLAYER_BYTES, 3); 
+    facialfeature = player->GetByteValue(PLAYER_BYTES_2, 0); 
+    if (sitting)
+    {
+        if (!player->HasFlag(PLAYER_FLAGS, PLAYER_FLAGS_HIDE_HELM))
+            player->ToggleFlag(PLAYER_FLAGS, PLAYER_FLAGS_HIDE_HELM);
+
+        if (player->GetMoney() >= 50000)
+             player->ADD_GOSSIP_ITEM(0, "Change my look. (5 gold)", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 1);
+        else 
+             player->ADD_GOSSIP_ITEM(0, "You do not have enough gold! (5 gold)", GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF + 8);
+    }
+    player->SEND_GOSSIP_MENU(text,_creature->GetGUID());
+    return true;
+}
+
+void ChangeEffect(Player* player )
+{
+    // First Send update to player, so most recent datas are up
+    player->SendUpdateToPlayer(player); 
+
+    // Force client to reload this player, so changes are visible
+    WorldPacket data(SMSG_FORCE_DISPLAY_UPDATE, 8);
+    data << player->GetGUID();
+    player->SendMessageToSet(&data,true);
+
+    // Do some visual effect ( Vanish visual spell )
+    player->CastSpell(player,24222,true);
+}
+
+void SelectHairStyle(Player* player, int change )
+{
+    uint8 max=maxHairStyles[player->getRace()].maxMale;
+    if (player->getGender() == GENDER_FEMALE)
+        max=maxHairStyles[player->getRace()].maxFemale;
+
+    int current = player->GetByteValue(PLAYER_BYTES, 2);
+
+    current += change;
+
+    if (current > max)
+        current = 0;
+    else if (current < 0)
+        current = max;
+
+    player->SetByteValue(PLAYER_BYTES, 2, current);
+    ChangeEffect(player);
+}
+
+void SelectHairColor(Player* player, int change )
+{
+    uint8 max=maxHairColor[player->getRace()];
+    int current = player->GetByteValue(PLAYER_BYTES, 3);
+
+    current += change;
+
+    if (current > max)
+        current = 0;
+    else if (current < 0)
+        current = max;
+
+    player->SetByteValue(PLAYER_BYTES, 3, current);
+    ChangeEffect(player);
+}
+
+void SelectFacialFeature(Player* player, int change )
+{
+    uint8 max=maxFacialFeatures[player->getRace()].maxMale;
+    if ( player->getGender() == GENDER_FEMALE )
+        max=maxFacialFeatures[player->getRace()].maxFemale;
+
+    int current = player->GetByteValue(PLAYER_BYTES_2, 0); 
+
+    current += change;
+
+    if (current > max)
+        current = 0;
+    else if (current < 0)
+        current = max;
+
+    player->SetByteValue(PLAYER_BYTES_2, 0, current);
+    ChangeEffect(player);
+}
+
+bool GossipSelect_stylist(Player* player, Creature* _creature, uint32 sender, uint32 action )
+{
+    char const* FeatureGossipMenu = "I want to change my facial hair style.";
+    switch (player->getRace())
+    {
+        case RACE_HUMAN:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my piercings.";
+            break;
+        case RACE_ORC:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my piercings.";
+            break;
+        case RACE_DWARF:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my earrings.";
+            break;
+        case RACE_NIGHTELF:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my markings.";
+            break;
+        case RACE_UNDEAD_PLAYER:
+            FeatureGossipMenu = "I want to change my face.";
+            break;
+        case RACE_TAUREN:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my hair.";
+            break;
+        case RACE_GNOME:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my earrings.";
+            break;
+        case RACE_TROLL:
+            FeatureGossipMenu = "I want to change my tusks.";
+            break;
+        case RACE_BLOODELF:
+            if (player->getGender() == GENDER_FEMALE)
+                FeatureGossipMenu = "I want to change my earrings.";
+            break;
+        case RACE_DRAENEI:
+            player->getGender() == GENDER_FEMALE ? FeatureGossipMenu = "I want to change my horns." : FeatureGossipMenu = "I want to change my tentacles.";
+            break;
+        }
+    // MAP
+    // 1 - main menu
+    // 2 - next hair style
+    // 3 - prev hair style
+    // 4 - next hair color
+    // 5 - prev hair color
+    // 6 - next facial feature
+    // 7 - prev facial feature
+    // 8 - not enought gold, or other close
+
+    switch (action)
+    {
+        // After player requested the action
+        case GOSSIP_ACTION_INFO_DEF + 1:   
+            if ( sender == GOSSIP_SENDER_MAIN )
+            {
+                if(player->GetMoney() >= 50000)
+                    player->ModifyMoney(-50000);
+                else
+                    player->SendBuyError(BUY_ERR_NOT_ENOUGHT_MONEY, _creature, 0, 0);
+            }
+            player->ADD_GOSSIP_ITEM(0, "I want to change my hair style.", GOSSIP_SENDER_OPTION , GOSSIP_ACTION_INFO_DEF + 2);
+            player->ADD_GOSSIP_ITEM(0, "I want to change my hair color.", GOSSIP_SENDER_OPTION , GOSSIP_ACTION_INFO_DEF + 4);
+            player->ADD_GOSSIP_ITEM(0, FeatureGossipMenu, GOSSIP_SENDER_OPTION , GOSSIP_ACTION_INFO_DEF + 6);
+            player->SEND_GOSSIP_MENU(50023, _creature->GetGUID());
+            break;
+        // hair style
+        // next - increase hair style
+        case GOSSIP_ACTION_INFO_DEF + 2:
+            if (sender == GOSSIP_SENDER_SUBOPTION)
+                SelectHairStyle(player,1);      
+        // previous - decrease it
+        case GOSSIP_ACTION_INFO_DEF + 3:
+            if (action == GOSSIP_ACTION_INFO_DEF + 3 && sender == GOSSIP_SENDER_SUBOPTION)
+                SelectHairStyle(player,-1);                             
+            // choose options again
+            player->ADD_GOSSIP_ITEM( 0, "Next one!", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 2);
+            player->ADD_GOSSIP_ITEM( 0, "Previous one!", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 3);
+            player->ADD_GOSSIP_ITEM( 0, "I'll have this one.", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 1);
+            player->SEND_GOSSIP_MENU(50024, _creature->GetGUID());
+            break;
+
+        // hair color
+        // next - increase hair color
+        case GOSSIP_ACTION_INFO_DEF + 4:
+            if (sender == GOSSIP_SENDER_SUBOPTION)
+                SelectHairColor(player,1);      
+        // previous - decrease hair color
+        case GOSSIP_ACTION_INFO_DEF + 5:
+            if (action == GOSSIP_ACTION_INFO_DEF + 5 && sender == GOSSIP_SENDER_SUBOPTION)
+                SelectHairColor(player,-1);                                     
+            // choose options again
+            player->ADD_GOSSIP_ITEM(0, "Next one!", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 4);
+            player->ADD_GOSSIP_ITEM(0, "Previous one!",GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 5);
+            player->ADD_GOSSIP_ITEM(0, "I'll have this one.", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 1);
+            player->SEND_GOSSIP_MENU(50024, _creature->GetGUID());
+            break;
+
+        // facial feature
+        // next - increase hair style
+        case GOSSIP_ACTION_INFO_DEF + 6:
+            if (sender == GOSSIP_SENDER_SUBOPTION)
+                SelectFacialFeature(player,1);  
+        // previous - decrease it
+        case GOSSIP_ACTION_INFO_DEF + 7:
+            if (action == GOSSIP_ACTION_INFO_DEF + 7 && sender == GOSSIP_SENDER_SUBOPTION)
+                SelectFacialFeature(player,-1);                         
+            // choose options again
+            player->ADD_GOSSIP_ITEM(0, "Next one!", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 6);
+            player->ADD_GOSSIP_ITEM(0, "Previous one!", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 7);
+            player->ADD_GOSSIP_ITEM(0, "I'll have this one.", GOSSIP_SENDER_SUBOPTION , GOSSIP_ACTION_INFO_DEF + 1);
+            player->SEND_GOSSIP_MENU(50024, _creature->GetGUID());
+            break;
+
+        // cannot affort
+        case GOSSIP_ACTION_INFO_DEF + 8:
+            player->PlayerTalkClass->CloseGossip();
+            break;
+
+    }
+    return true;
+}
+
+
+void AddSC_stylist()
+{
+    Script *newscript;
+
+    newscript = new Script;
+    newscript->Name="stylist";
+    newscript->pGossipHello =           &GossipHello_stylist;
+    newscript->pGossipSelect =          &GossipSelect_stylist;
+    newscript->RegisterSelf();
+}
\ No newline at end of file
diff --git a/src/scripts/Custom/stylist.h b/src/scripts/Custom/stylist.h
new file mode 100644
index 0000000..3a1f9d5
--- /dev/null
+++ b/src/scripts/Custom/stylist.h
@@ -0,0 +1,73 @@
+/*
+ * This file is part of the BlizzLikeCore Project.
+ * See CREDITS.md and LICENSE.md files for Copyright information.
+ */
+ 
+#include "ScriptedGossip.h"
+#include <cstring>
+
+uint32 hairstyle;
+uint32 haircolor;
+uint32 facialfeature;
+bool   helmetShown;
+
+typedef struct maxStyles_struct {
+        uint8 maxMale;
+        uint8 maxFemale;
+} maxStyles_t;
+
+maxStyles_t maxHairStyles[MAX_RACES] =
+{
+    {0,0},  //                        0
+    {11,18},// RACE_HUMAN           = 1,
+    {6,6},  // RACE_ORC             = 2,
+    {10,13},// RACE_DWARF           = 3,
+    {6,6},  // RACE_NIGHTELF        = 4,
+    {10,9}, // RACE_UNDEAD_PLAYER   = 5,
+    {7,6},  // RACE_TAUREN          = 6,
+    {6,6},  // RACE_GNOME           = 7,
+    {5,4},  // RACE_TROLL           = 8,
+    {0,0},  // RACE_GOBLIN          = 9,
+    {9,13}, // RACE_BLOODELF        = 10,
+    {7,10}, // RACE_DRAENEI         = 11
+};
+
+uint8 maxHairColor[MAX_RACES] =
+{
+    0,  //                        0
+    9,  // RACE_HUMAN           = 1,
+    7,  // RACE_ORC             = 2,
+    9,  // RACE_DWARF           = 3,
+    7,  // RACE_NIGHTELF        = 4,
+    9,  // RACE_UNDEAD_PLAYER   = 5,
+    2,  // RACE_TAUREN          = 6,
+    8,  // RACE_GNOME           = 7,
+    9,  // RACE_TROLL           = 8,
+    0,  // RACE_GOBLIN          = 9,
+    9,  // RACE_BLOODELF        = 10,
+    6,  // RACE_DRAENEI         = 11
+};
+
+maxStyles_t maxFacialFeatures[MAX_RACES] =
+{
+    {0,0},  //                        0
+    {8,6},  // RACE_HUMAN           = 1,
+    {10,6}, // RACE_ORC             = 2,
+    {10,5}, // RACE_DWARF           = 3,
+    {5,9},  // RACE_NIGHTELF        = 4,
+    {16,7}, // RACE_UNDEAD_PLAYER   = 5,
+    {6,4},  // RACE_TAUREN          = 6,
+    {7,6},  // RACE_GNOME           = 7,
+    {10,5}, // RACE_TROLL           = 8,
+    {0,0},  // RACE_GOBLIN          = 9,
+    {10,9}, // RACE_BLOODELF        = 10,
+    {7,6},  // RACE_DRAENEI         = 11
+};
+
+
+void SelectFacialFeature(Player* player, int change );
+void SelectHairColor(Player* player, int change );
+void SelectHairStyle(Player* player, int change );
+
+#define GOSSIP_SENDER_OPTION 50
+#define GOSSIP_SENDER_SUBOPTION 51
